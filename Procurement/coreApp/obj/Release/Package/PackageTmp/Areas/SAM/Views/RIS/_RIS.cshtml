@model coreApp.Areas.SAM.tblRI

@{    
    bool isReadOnly = (bool)ViewBag.uiIsReadOnly;
    bool includeId = (bool)ViewBag.uiIncludeId;
    
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    if (isReadOnly)
    {
        <div class="form-row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.Id)
            </div>
            <div class="col-md-9">
                <div class="form-control">
                    @Html.DisplayFor(model => model.Id)
                </div>
            </div>
        </div>

                <div class="form-row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.RequisitionDate)
                    </div>
                    <div class="col-md-9">
                        <div class="form-control">
                            @Html.DisplayFor(model => model.RequisitionDate)
                        </div>
                    </div>
                </div>

                <div class="form-row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model._RISNo)
                    </div>
                    <div class="col-md-9">
                        <div class="form-control">
                            @Html.DisplayFor(model => model._RISNo)
                        </div>
                    </div>
                </div>

                <div class="form-row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Fund)
                    </div>
                    <div class="col-md-9">
                        <div class="form-control">
                            @Html.DisplayFor(model => model.Fund)
                        </div>
                    </div>
                </div>

                <div class="form-row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.EmployeeId)
                    </div>
                    <div class="col-md-9">
                        <div class="form-control">
                            @Html.DisplayFor(model => model._EmployeeName)
                        </div>
                    </div>
                </div>

                <div class="form-row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model._Position)
                    </div>
                    <div class="col-md-9">
                        <div class="form-control">
                            @Html.DisplayFor(model => model._Position)
                        </div>
                    </div>
                </div>

                <div class="form-row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model._Office)
                    </div>
                    <div class="col-md-9">
                        <div class="form-control">
                            @Html.DisplayFor(model => model._Office)
                        </div>
                    </div>
                </div>

                <div class="form-row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model._Department)
                    </div>
                    <div class="col-md-9">
                        <div class="form-control">
                            @Html.DisplayFor(model => model._Department)
                        </div>
                    </div>
                </div>

                <div class="form-row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Purpose)
                    </div>
                    <div class="col-md-9">
                        <div class="form-control">
                            @Html.DisplayMultiLineFor(model => model.Purpose)
                        </div>
                    </div>
                </div>
    }
    else
    {
        @Html.HiddenFor(model => model.Id)

        if (includeId)
        {
            <div class="form-row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.Id)
                </div>
                <div class="col-md-9">
                    <div class="form-control dimmed">
                        @Html.DisplayFor(model => model.Id)
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model._RISNo)
                </div>
                <div class="col-md-9">
                    <div class="form-control dimmed">
                        @Html.DisplayFor(model => model._RISNo)
                    </div>
                </div>
            </div>
        }

        <div class="form-row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.RequisitionDate)
            </div>
            <div class="col-md-9">
                @Html.TextBoxFor(model => model.RequisitionDate, "{0:MM/dd/yyyy}", new { @class = "form-control datepicker" })
            </div>
        </div>

        <div class="form-row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.Fund)
            </div>
            <div class="col-md-9">
                @Html.TextBoxFor(model => model.Fund, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.EmployeeId)
            </div>
            <div class="col-md-9">
                @Html.DropDownListFor(model => model.EmployeeId, coreApp.Areas.Procurement.SelectItems.getEmployees(), new { @class = "form-control" })
            </div>
        </div>

        <div class="form-row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.Purpose)
            </div>
            <div class="col-md-9">
                @Html.TextAreaFor(model => model.Purpose, new { @class = "form-control" })
            </div>
        </div>
    }
}