@model coreApp.Areas.Procurement.DAL.tblPPMP
@using coreLib.Extensions
@{
    ViewBag.Title = "PPMP Items";

    coreApp.Areas.Procurement.Models.DepartmentPPMPModel departmentPPMPModel = new coreApp.Areas.Procurement.Models.DepartmentPPMPModel(Model.Year, Model.Office, Model.Department.Department, Model.DepartmentId.Value);


    double totalFunds = departmentPPMPModel.utility.TotalAmountReceived();
    double totalSubmitted = departmentPPMPModel.utility.TotalAmountOfSubmittedPPMPs(Model.Id);
    double totalAmount = Model._TotalAmount;
    double balance = totalFunds - totalSubmitted - totalAmount;

    bool negativeBalance = balance < 0;
}

<div class="block">
    <div class="card">
        <div class="card-header">
            <h5>@Model.Description Item</h5>
            <div class="card-header-right">
                <div class="btn-group card-option">
                    <div class="btn-group-sm header-button">
                        <button class="btn btn-success btn-additems">Add Items</button>
                        <button class="btn btn-danger btn-clearitems">Clear Items</button>
                        <button class="btn btn-info btn-print" data-printmsg="@Module.Core.ModuleConstants.PRINT_OPTIONS">Print</button>
                        <button class="btn btn-warning btn-submit">Submit</button>

                    </div>
                </div>
            </div>
        </div>
        <div class="card-body">
            @if (Model.HasBeenSubmitted)
            {
                <div class="alert alert-info">
                    Submitted by: @Model.SubmittedBy |
                    <small>@Html.DisplayFor(x => Model.SubmitDate)</small>
                </div>
            }
            <div class="row">
                <div class="col-sm-6">
                    <table class="tblinfo">
                        <tbody>
                            <tr>
                                <td>Year</td>
                                <td>:</td>
                                <td>@Model.Year</td>
                            </tr>
                            <tr>
                                <td>Office</td>
                                <td>:</td>
                                <td>@Model.Office.Office<div class="subtitle">@Model.Office.OfficeAddress</div></td>
                            </tr>
                            <tr class="title">
                                <td>Department</td>
                                <td>:</td>
                                <td>@Model.Department.Department</td>
                            </tr>
                        </tbody>
                    </table>
                    <br />
                    @Html.Partial("~/Areas/Procurement/Views/Shared/ppmpInfo.cshtml", "/Procurement/DepartmentPPMP/Items/Index/",
                                        new ViewDataDictionary { { "year", Model.Year }, { "ppmp", Model }, { "forOffice", false } })
                    <br />
                    <br />
                </div>
                <div class="col-sm-6" style="text-align:right">
                    <table class="tblbalance">
                        <tbody>
                            <tr><td>Total Department Funds:</td><td>@totalFunds.ToCurrencyString()</td></tr>
                            <tr><td>Other Submitted Department PPMPs:</td><td>@totalSubmitted.ToCurrencyString()</td></tr>
                            <tr><td>Total Amount of Items:</td><td>@totalAmount.ToCurrencyString()</td></tr>
                            <tr class="@(negativeBalance ? "negative-value" : "")"><td>Balance@(Model.HasBeenSubmitted ? "" : " (if submitted)"):</td><td>@balance.ToCurrencyString(negativeIsEncloseInParenthesis: true)</td></tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="dt-responsive table-responsive">
                <table class="display table maintable table-bordered table-striped table-list skiptable" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th>
                                Item Name
                            </th>
                            <th>
                                Description
                            </th>
                            <th>
                                In DBM
                            </th>
                            <th>
                                Category
                            </th>
                            <th>
                                Q1
                            </th>
                            <th>
                                Q2
                            </th>
                            <th>
                                Q3
                            </th>
                            <th>
                                Q4
                            </th>
                            <th>
                                Qty
                            </th>
                            <th>
                                Price
                            </th>
                            <th>
                                Amount
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Model().Items)
                        {
                            <tr record-id="@item.Id" data-item="@item.Stringify()">
                                <td>
                                    @Html.DisplayFor(modelItem => item.ItemName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ItemDescription)
                                </td>
                                <td class="qtr">
                                    @(item.ItemInDBM ? "Yes" : "No")
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ItemCategory)
                                </td>
                                <td class="qtr">
                                    @(item.Q1 == 0 ? "" : item.Q1.ToString("#,##0"))
                                </td>
                                <td class="qtr">
                                    @(item.Q2 == 0 ? "" : item.Q2.ToString("#,##0"))
                                </td>
                                <td class="qtr">
                                    @(item.Q3 == 0 ? "" : item.Q3.ToString("#,##0"))
                                </td>
                                <td class="qtr">
                                    @(item.Q4 == 0 ? "" : item.Q4.ToString("#,##0"))
                                </td>
                                <td class="qtr">
                                    @(item.Qty == 0 ? "" : item.Qty.ToString("#,##0"))
                                </td>
                                <td class="amnt">
                                    @Html.DisplayFor(modelItem => item.ItemPrice)
                                </td>
                                <td class="amnt">
                                    @Html.DisplayFor(modelItem => item.Amount)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script src="~/assets/nextro/assets/js/plugins/dataTables.bootstrap4.min.js"></script>
<script src="~/assets/nextro/assets/js/plugins/bootstrap-select.min.js"></script>
<script>
    $('.pc-selectpicker').selectpicker();
    $(function () { });
</script>