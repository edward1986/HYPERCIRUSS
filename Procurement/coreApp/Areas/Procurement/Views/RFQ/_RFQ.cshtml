@model coreApp.Areas.Procurement.DAL.tblRFQ

@{
    bool isReadOnly = (bool)ViewBag.uiIsReadOnly;
    bool includeId = (bool)ViewBag.uiIncludeId;

    int year = (int)ViewBag.Year;
}



@Html.Hidden("SuppliersData", Newtonsoft.Json.JsonConvert.SerializeObject(Model.Suppliers().Select(x => new { Id = x.Id, Name = x.CompanyName })))
@Html.Hidden("Submitted", Model.HasBeenSubmitted)


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.SupplierIds)

    if (isReadOnly)
    {
        <div class="form-group row">
            <div class="col-md">
                @Html.LabelFor(model => model.Id)
                <div class="form-control">
                    @Html.DisplayFor(model => model.Id)
                </div>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md">
                @Html.LabelFor(model => model.Description)
                <div class="form-control">
                    @Html.DisplayFor(model => model.Description)
                </div>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md">
                @Html.LabelFor(model => model.DocStatus_Desc)
                <div class="form-control">
                    @Html.DisplayFor(model => model.DocStatus_Desc)
                </div>
            </div>
        </div>

        if (Model.HasBeenSubmitted)
        {
            <div class="form-group row">
                <div class="col-md">
                    @Html.LabelFor(model => model.SubmittedBy)
                    <div class="form-control">
                        @Html.DisplayFor(model => model.SubmittedBy) | 
                        @Html.DisplayFor(model => model.SubmitDate)
                    </div>
                </div>
            </div>
        }

        if (Model.IsReturned)
        {
            <div class="form-group row">
                <div class="col-md">
                    @Html.LabelFor(model => model.ReturnedBy)
                    <div class="form-control">
                        @Html.DisplayFor(model => model.ReturnedBy)
                    </div>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md">
                    @Html.LabelFor(model => model.ReturnMessage)
                    <div class="form-control">
                        @Html.DisplayMultiLineFor(model => model.ReturnMessage)
                    </div>
                </div>
            </div>
        }

        <h6>Request Details</h6>
        <hr />

        <div class="form-group row">
            <div class="col-md">
                @Html.LabelFor(model => model.Form_PHILGEPS)
                <div class="form-control">
                    @Html.DisplayFor(model => model.Form_PHILGEPS)
                </div>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md">
                @Html.LabelFor(model => model.Form_Deadline)
                <div class="form-control">
                    @Html.DisplayFor(model => model.Form_Deadline)
                </div>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md">
                @Html.LabelFor(model => model.Form_Canvasser)
                <div class="form-control">
                    @Html.DisplayFor(model => model.Form_Canvasser)
                </div>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md">
                @Html.LabelFor(model => model.SupplierIds)
                <div>
                    <ol style="padding-left:1rem;">
                        @foreach (coreApp.Areas.Procurement.DAL.tblSupplier supp in Model.Suppliers())
                        {
                            <li>
                                @supp.CompanyName
                            </li>
                        }
                    </ol>
                </div>
            </div>
        </div>
    }
    else
    {
        @Html.HiddenFor(model => model.Id)


        <div class="form-group row">
            <div class="col-md">
                @Html.LabelFor(model => model.Description)
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
            </div>
        </div>

        <h6>Request Details</h6>
        <hr />

        <div class="form-group row">
            <div class="col-md">
                @Html.LabelFor(model => model.Form_PHILGEPS)
                @Html.TextBoxFor(model => model.Form_PHILGEPS, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md">
                @Html.LabelFor(model => model.Form_Deadline)
                @Html.TextBoxFor(model => model.Form_Deadline, new { @class = "form-control datepicker", Style = "width:100%;" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md">
                @Html.LabelFor(model => model.Form_Canvasser)
                @Html.TextBoxFor(model => model.Form_Canvasser, new { @class = "form-control" })
            </div>
        </div>

       <div class="form-group row">
            <div class="col-md">
                @Html.LabelFor(model => model.SupplierIds)
            </div>
            <div class="col-md-12">

                @{
                    List<string> ids = new List<string>();
                    if (!string.IsNullOrEmpty(Model.SupplierIds))
                    {
                        ids = Model.SupplierIds.Split(',').ToList();
                    }
                }
                <select multiple class="pc-selectpicker select2 suppliers col-md-12">
                    @foreach (SelectListItem supplier in coreApp.Areas.Procurement.SelectItems.getSuppliers(showEmptyItem: false))
                    {
                        <option value="@supplier.Value" @(ids.Contains(supplier.Value) ? "selected" : "")>@supplier.Text</option>
                    }
                </select>
            </div>

        </div>

    }
}

<style>
    .select2-container {
        display: none;
    }

    .modal-content {
        width: 40em;
    }
</style>

