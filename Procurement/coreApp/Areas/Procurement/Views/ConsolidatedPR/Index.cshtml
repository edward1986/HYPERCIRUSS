@model coreApp.Areas.Procurement.Models.ConsolidatedPRModel
@using coreLib.Extensions
@{
    ViewBag.Title = "Consolidated PRs";

    int Year = (int)ViewBag.Year;

    double totalAmountOfSubmittedCPRs = Model.utility.TotalAmountOfSubmittedCPRs();

}

@section Breadcrumbs {
    @Html.Partial("_Breadcrumbs", new List<Breadcrumb>()
    {
        new Breadcrumb { Description = "Procurement" },
        new Breadcrumb { Description = ViewBag.Title }
    })
}

@section Styles {
    <link href="~/Areas/Procurement/Assets/css/common.less" rel="stylesheet" type="text/css">
}

@section Scripts {
    <script>
        function load(e) {

            if (e.viewType == 'view') {
                //var showMOP = e.modal.find('[name="ShowMOP"]').val() == 'True';

                var mopBtn = e.modal.find('.btn-mop');
                var viewItemsBtn = e.modal.find('.btn-viewitems');
                var editBtn = e.modal.find('.btn-edit');
                var deleteBtn = e.modal.find('.btn-delete');
                var submitBtn = e.modal.find('.btn-submit');
                var returnBtn = e.modal.find('.btn-return');
                var returnCompanyPRBtn = e.modal.find('.btn-return-companypr');
                var printBtn = e.modal.find('.btn-print');

                var isOfficePR = e.modalViewUrl.indexOf('isofficepr=true') >= 0;
                var isCompanyPR = e.modalViewUrl.indexOf('iscompanypr=true') >= 0;
                var controller = isOfficePR ? 'OfficePR' : isCompanyPR ? 'CompanyPR' : 'ConsolidatedPR';
                var param = isOfficePR || isCompanyPR ? '?fromCPR=true' : '';
                var _href = '/Procurement/' + controller + '/Items/Index/' + e.recordId + param;
                var _dataLink = '/Procurement/' + controller + '/Items/Index/{0}' + param;

                viewItemsBtn
                    .attr('href', _href)
                    .attr('data-link', _dataLink);


                var submitLink = submitBtn.attr('data-link-tmp');

                submitBtn.unbind('click').bind('click', function (ee) {
                    ee.preventDefault();

                    modalConfirm('Are you sure you want to submit this document?', function (ret) {
                        if (ret) {
                            e.modal.modal('hide');
                            var proc = modalProcessing();

                            $.post(submitLink, null, function (res) {
                                proc.modal('hide');

                                if (res.IsSuccessful) {
                                    sessionStorage.clientMessage = res.Remarks;
                                    window.location.reload(true);
                                } else {
                                    modalMessage(res.Err.split('\n'), 'Consolidated PR', true);
                                }
                            }, 'json');
                        }
                    });

                });

                var returnLink = returnBtn.attr('data-link-tmp');

                returnBtn.unbind('click').bind('click', function (ee) {
                    ee.preventDefault();

                    modalInput('Are you sure you want to return this document?', 'Return Message:', function (ret, userInput) {
                        if (ret) {
                            if (userInput == '') {
                                modalMessage('Return message is required', 'Return PR', true);
                                return;
                            }

                            var data = {
                                returnMessage: userInput
                            };

                            $.post(returnLink, data, function (res) {
                                if (res.IsSuccessful) {
                                    sessionStorage.clientMessage = res.Remarks;
                                    window.location.reload(true);
                                } else {
                                    modalMessage(res.Err.split('\n'), 'Return PR', true);
                                }
                            }, 'json');
                        }
                    }, 'textarea', function (modal) {
                        modal.find('.modal-footer .btn-cancel').html('No');
                        modal.find('.modal-footer .btn-ok').html('Yes');
                    });

                });

                var returnCompanyPRLink = returnCompanyPRBtn.attr('data-link-tmp');

                returnCompanyPRBtn.unbind('click').bind('click', function (ee) {
                    ee.preventDefault();

                    modalInput('Are you sure you want to return this document?', 'Return Message:', function (ret, userInput) {
                        if (ret) {
                            if (userInput == '') {
                                modalMessage('Return message is required', 'Return Agency PR', true);
                                return;
                            }

                            var data = {
                                returnMessage: userInput
                            };

                            $.post(returnCompanyPRLink, data, function (res) {
                                if (res.IsSuccessful) {
                                    sessionStorage.clientMessage = res.Remarks;
                                    window.location.reload(true);
                                } else {
                                    modalMessage(res.Err.split('\n'), 'Return Agency PR', true);
                                }
                            }, 'json');
                        }
                    }, 'textarea', function (modal) {
                        modal.find('.modal-footer .btn-cancel').html('No');
                        modal.find('.modal-footer .btn-ok').html('Yes');
                    });

                });

                var printlink = printBtn.attr('data-link-tmp');

                printBtn.unbind('click').bind('click', function (ee) {
                    ee.preventDefault();

                    modalPrint('@Module.Core.ModuleConstants.PRINT_OPTIONS', function (ret) {
                        var dlWord = 'true';

                        if (ret) {
                            dlWord = 'false';
                        }

                        window.open(printlink + '?dlWord=' + dlWord, '_blank');
                    });
                });

                var hasBeenSubmitted = e.modal.find('[name="Submitted"]').val() == 'True';

                editBtn.hide();
                deleteBtn.hide();
                submitBtn.hide();
                returnBtn.hide();
                returnCompanyPRBtn.hide();
                printBtn.hide();
                //mopBtn.hide();

                if (!isOfficePR && !isCompanyPR) {
                    printBtn.show();
                }

                if (hasBeenSubmitted) {
                    if (isOfficePR) {
                        returnBtn.show();
                    } else if (isCompanyPR) {
                        returnCompanyPRBtn.show();
                    }
                    mopBtn.html('View Modes of Procurement');
                } else {
                    mopBtn.html('Set/View Modes of Procurement');
                    mopBtn.show();
                    editBtn.show();
                    deleteBtn.show();
                    submitBtn.show();
                }
            }
        }
    </script>
}


<div class="block">
    <div class="card">
        <div class="card-header">
            <h5>@ViewBag.Title</h5>

        </div>
        <div class="card-body">
            <div class="form-group row">
                <div class="col-sm-3">
                    <label class="col-form-label text-lg-right">For the year:</label>
                    @Html.Partial("~/Areas/Procurement/Views/Shared/yearInfo.cshtml", "/Procurement/ConsolidatedPR/Index/{0}")
                </div>

                <div class="col-sm-9" style="text-align:right">
                    <table class="tblbalance">
                        <tbody>
                            <tr>
                                <td>Total Amount of Submitted PRs:</td>
                                <td>@totalAmountOfSubmittedCPRs.ToCurrencyString()</td>
                            </tr>
                        </tbody>
                    </table>
                </div>

            </div>

            <ul class="nav nav-tabs mb-3" id="myTab" role="tablist">
                <li class="nav-item">
                    <a class="nav-link active text-uppercase" data-toggle="tab" href="#tab1" role="tab" aria-controls="home" aria-selected="true">Consolidated PRs</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-uppercase" data-toggle="tab" href="#tab2" role="tab" aria-controls="profile" aria-selected="false">Approved Office PRs</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-uppercase" data-toggle="tab" href="#tab3" role="tab" aria-controls="profile" aria-selected="false">Submitted Agency PRs</a>
                </li>
            </ul>

            <div class="content tab-content">
                <div class="tab-pane active" id="tab1">
                    <div class="float-right">
                        <button class="btn btn-sm btn-success btn-create" onclick="$.fn.list('modalCreate', this)">Create</button>
                    </div>
                    <br />
                    <br />
                    <div class="dt-responsive table-responsive">
                        <table id="table1" class="display table table-bordered table-striped table-list use-each" cellspacing="0" width="100%"
                               modal-target="#modalView" modal-start="view" modal-load-callback="load"
                               modal-view-url="/Procurement/ConsolidatedPR/Details/@Year/{0}" modal-edit-url="/Procurement/ConsolidatedPR/Edit/@Year/{0}" modal-delete-url="/Procurement/ConsolidatedPR/Delete/@Year" modal-create-url="/Procurement/ConsolidatedPR/Create/@Year">
                            <thead>
                                <tr>
                                    <th>
                                        Description
                                    </th>
                                    <th>
                                        Status
                                    </th>
                                    <th>
                                        Submitted By
                                    </th>
                                    <th>
                                        Total Amount
                                    </th>
                                    <th>
                                        Modes of procurement has been set
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.CPRs)
                                {
                                    <tr record-id="@item.Id" data-tableid="table1">
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Description)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.DocStatus_Desc)
                                        </td>
                                        <td>
                                            @if (item.HasBeenSubmitted)
                                            {
                                                @Html.DisplayFor(modelItem => item.SubmittedBy)<br />
                                                @Html.DisplayFor(modelItem => item.SubmitDate)
                                            }
                                        </td>
                                        <td style="text-align:right">
                                            @((item._TotalAmount ?? 0).ToCurrencyString())
                                        </td>
                                        <td>
                                            @(item.MOPSet() ? "Yes" : "No")
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="tab-pane" id="tab2">
                    <div class="dt-responsive table-responsive">
                        <table id="table2" class="display table table-bordered table-striped table-list use-each" cellspacing="0" width="100%"
                               modal-target="#modalView" modal-start="view"
                               modal-view-url="/Procurement/OfficePR/Details/@Year/{0}?isofficepr=true">

                            <thead>
                                <tr>
                                    <th>
                                        Description
                                    </th>
                                    <th>
                                        Office
                                    </th>
                                    <th>
                                        Status
                                    </th>
                                    <th>
                                        Submitted By
                                    </th>
                                    <th>
                                        Total Amount
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    double total = 0;
                                }

                                @foreach (var item in Model.OfficePRs)
                                {
                                    double t = item._TotalAmount ?? 0;
                                    total += t;

                                    <tr record-id="@item.Id" data-tableid="table2">
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Description)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Office.Office)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.DocStatus_Desc)
                                        </td>
                                        <td>
                                            @if (item.HasBeenSubmitted)
                                            {
                                                @Html.DisplayFor(modelItem => item.SubmittedBy)<br />
                                                @Html.DisplayFor(modelItem => item.SubmitDate)
                                            }
                                        </td>
                                        <td style="text-align:right">
                                            @t.ToCurrencyString()
                                        </td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th class="nofilter" colspan="4" style="text-align:right">
                                        TOTAL
                                    </th>
                                    <th class="nofilter" style="text-align:right">
                                        @total.ToCurrencyString()
                                    </th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
                <div class="tab-pane" id="tab3">
                    <div class="dt-responsive table-responsive">
                        <table id="table3" class="display table table-bordered table-striped table-list use-each" cellspacing="0" width="100%"
                               modal-target="#modalView" modal-start="view"
                               modal-view-url="/Procurement/CompanyPR/Details/@Year/{0}?iscompanypr=true">

                            <thead>
                                <tr>
                                    <th>
                                        Description
                                    </th>
                                    <th>
                                        Status
                                    </th>
                                    <th>
                                        Submitted By
                                    </th>
                                    <th>
                                        Total Amount
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    double ctotal = 0;
                                }

                                @foreach (var item in Model.CompanyPRs)
                                {
                                    double t = item._TotalAmount ?? 0;
                                    ctotal += t;

                                    <tr record-id="@item.Id" data-tableid="table3">
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Description)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.DocStatus_Desc)
                                        </td>
                                        <td>
                                            @if (item.HasBeenSubmitted)
                                            {
                                                @Html.DisplayFor(modelItem => item.SubmittedBy)<br />
                                                @Html.DisplayFor(modelItem => item.SubmitDate)
                                            }
                                        </td>
                                        <td style="text-align:right">
                                            @t.ToCurrencyString()
                                        </td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th class="nofilter" colspan="3" style="text-align:right">
                                        TOTAL
                                    </th>
                                    <th class="nofilter" style="text-align:right">
                                        @ctotal.ToCurrencyString()
                                    </th>
                                </tr>
                            </tfoot>
                        </table>

                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

@Html.Partial("~/Views/Shared/modals/_ModalView.cshtml", "modalView")
