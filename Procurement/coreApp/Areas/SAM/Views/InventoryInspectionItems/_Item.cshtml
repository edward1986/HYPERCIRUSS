@model coreApp.Areas.SAM.tblInventoryItemStatus

@{    
    bool isReadOnly = (bool)ViewBag.uiIsReadOnly;
    bool includeId = (bool)ViewBag.uiIncludeId;
    
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    if (isReadOnly)
    {
        coreApp.Areas.SAM.InventoryItemModel inventoryItemModel = new coreApp.Areas.SAM.InventoryItemModel(Model.InventoryItemId);

        <div class="form-group row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.Id)
            </div>
            <div class="col-md-9">
                <div class="form-control">
                    @Html.DisplayFor(model => model.Id)
                </div>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-3">
                @Html.LabelFor(model => inventoryItemModel.Item.PropertyNo)
            </div>
            <div class="col-md-9">
                <div class="form-control">
                    @Html.DisplayFor(model => inventoryItemModel.Item.PropertyNo)
                </div>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-3">
                @Html.LabelFor(model => inventoryItemModel.Tag.POItem.ItemName)
            </div>
            <div class="col-md-9">
                <div class="form-control">
                    @Html.DisplayFor(model => inventoryItemModel.Tag.POItem.ItemName)
                </div>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.Status)
            </div>
            <div class="col-md-9">
                <div class="form-control">
                    @Html.DisplayFor(model => model.Status_Desc)
                </div>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.Remarks)
            </div>
            <div class="col-md-9">
                <div class="form-control">
                    @Html.DisplayMultiLineFor(model => model.Remarks)
                </div>
            </div>
        </div>
    }
    else
    {
        @Html.HiddenFor(model => model.Id)

        if (includeId)
        {
            coreApp.Areas.SAM.InventoryItemModel inventoryItemModel = new coreApp.Areas.SAM.InventoryItemModel(Model.InventoryItemId);

            @*<div class="form-group row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.Id)
                </div>
                <div class="col-md-9">
                    <div class="form-control dimmed">
                        @Html.DisplayFor(model => model.Id)
                    </div>
                </div>
            </div>*@

            <div class="form-group row">
                <div class="col-md-3">
                    @Html.LabelFor(model => inventoryItemModel.Item.PropertyNo)
                </div>
                <div class="col-md-9">
                    <div class="form-control dimmed">
                        @Html.DisplayFor(model => inventoryItemModel.Item.PropertyNo)
                    </div>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-md-3">
                    @Html.LabelFor(model => inventoryItemModel.Tag.POItem.ItemName)
                </div>
                <div class="col-md-9">
                    <div class="form-control dimmed">
                        @Html.DisplayFor(model => inventoryItemModel.Tag.POItem.ItemName)
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="form-group row">
                <div class="col-md-3">
                    Property No.
                </div>
                <div class="col-md-9">
                    @Html.TextBox("PropertyNo", "", new { @class = "form-control" })
                </div>
            </div>
        }


        <div class="form-group row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.Status)
            </div>
            <div class="col-md-9">
                @Html.DropDownListFor(model => model.Status, coreApp.Areas.SAM.SelectItems.getInventoryStatus(defaultValue: (int)coreApp.Areas.SAM.Enums.InventoryItemStatus.Usable, showEmptyItem: false), new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.Remarks)
            </div>
            <div class="col-md-9">
                @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control" })
            </div>
        </div>
    }

}