@model coreApp.Areas.SAM.tblRISItem

@{    
    bool isReadOnly = (bool)ViewBag.uiIsReadOnly;
    bool includeId = (bool)ViewBag.uiIncludeId;

    coreApp.Areas.SAM.tblRI ris = (coreApp.Areas.SAM.tblRI)ViewBag.RI;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    if (isReadOnly)
    {
        <div class="form-group row">
            <div class="col-md">
                @Html.LabelFor(model => model.Id)
                <div class="form-control">
                    @Html.DisplayFor(model => model.Id)
                </div>
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model._ItemName)
            <div class="col-md">
                <div class="form-control">
                    @Html.DisplayFor(model => model._ItemName) (PO# @Model._PONo))
                </div>
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model._Unit)
            <div class="col-md">
                <div class="form-control">
                    @Html.DisplayFor(model => model._Unit)
                </div>
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model._UnitCost)
            <div class="col-md">
                <div class="form-control">
                    @Html.DisplayFor(model => model._UnitCost)
                </div>
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.Requested_Qty)
            <div class="col-md">
                <div class="form-control">
                    @Html.DisplayFor(model => model.Requested_Qty)
                </div>
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.Approved_Qty)
            <div class="col-md">
                <div class="form-control">
                    @Html.DisplayFor(model => model.Approved_Qty)
                </div>
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.Amount)
            <div class="col-md">
                <div class="form-control">
                    @Html.DisplayFor(model => model.Amount)
                </div>
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(model => model.Remarks)
            <div class="col-md">
                <div class="form-control">
                    @Html.DisplayMultiLineFor(model => model.Remarks)
                </div>
            </div>
        </div>
    }
    else
    {
        @Html.HiddenFor(model => model.Id)

        @*if (includeId)
        {
            <div class="form-group row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.Id)
                </div>
                <div class="col-md">
                    <div class="form-control dimmed">
                        @Html.DisplayFor(model => model.Id)
                    </div>
                </div>
            </div>
        }*@


        <div class="form-group row">
            <div class="col-md">
                @Html.LabelFor(model => model.POItemId)
                @Html.DropDownListFor(model => model.POItemId, coreApp.Areas.SAM.SelectItems.getSupplyItems(ris.WarehouseId), new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md">
                @Html.LabelFor(model => model.Requested_Qty)
                @Html.TextBoxFor(model => model.Requested_Qty, new { @class = "form-control int-spinner", data_allow_negative = "false" })
            </div>
        </div>

        <div class="form-group row">
           <div class="col-md">
                @Html.LabelFor(model => model.Approved_Qty)
                @Html.TextBoxFor(model => model.Approved_Qty, new { @class = "form-control int-spinner", data_allow_negative = "false" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md">
                @Html.LabelFor(model => model.Remarks)
                @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control" })
            </div>
        </div>
    }

}