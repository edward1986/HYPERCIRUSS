@model coreApp.DAL.tblEmployee_Voluntary

@{    
    bool isReadOnly = (bool)ViewBag.uiIsReadOnly;
    bool includeId = (bool)ViewBag.uiIncludeId;

}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    if (isReadOnly)
    {
        <div class="form-row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.Id)
            </div>
            <div class="col-md-8">
                <div class="form-control">
                    @Html.DisplayFor(model => model.Id)
                </div>
            </div>
        </div>

        <div class="form-row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.DateFrom)
            </div>
            <div class="col-md-8">
                <div class="form-control">
                    @Html.DisplayFor(model => model.DateFrom)
                </div>
            </div>
        </div>

        <div class="form-row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.DateTo)
            </div>
            <div class="col-md-8">
                <div class="form-control">
                    @Html.DisplayFor(model => model.DateTo_Desc)
                </div>
            </div>
        </div>

        <div class="form-row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.Organization)
            </div>
            <div class="col-md-8">
                <div class="form-control">
                    @Html.DisplayFor(model => model.Organization)
                </div>
            </div>
        </div>

        <div class="form-row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.Address)
            </div>
            <div class="col-md-8">
                <div class="form-control">
                    @Html.DisplayFor(model => model.Address)
                </div>
            </div>
        </div>

        <div class="form-row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.NoOfHours)
            </div>
            <div class="col-md-8">
                <div class="form-control">
                    @Html.DisplayFor(model => model.NoOfHours)
                </div>
            </div>
        </div>

        <div class="form-row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.PositionNatureOfWork)
            </div>
            <div class="col-md-8">
                <div class="form-control">
                    @Html.DisplayMultiLineFor(model => model.PositionNatureOfWork)
                </div>
            </div>
        </div>

        <div class="form-row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.OnSeparatePage)
            </div>
            <div class="col-md-8">
                <div class="form-control">
                    @Html.DisplayBooleanFor(model => model.OnSeparatePage)
                </div>
            </div>
        </div>
    }
    else
    {
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.EmployeeId)


        if (includeId)
        {
            <div class="form-row">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Id)
                </div>
                <div class="col-md-8">
                    <div class="form-control dimmed">
                        @Html.DisplayFor(model => model.Id)
                    </div>
                </div>
            </div>
        }



        <div class="form-row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.DateFrom)
            </div>
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.DateFrom, "{0:MM/dd/yyyy}", new { @class = "form-control datepicker" })
            </div>
        </div>

        <div class="form-row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.DateTo)
            </div>
            <div class="col-md-8">
                <div class="input-group">
                    @Html.TextBoxFor(model => model.DateTo, "{0:MM/dd/yyyy}", new { @class = "datepicker" })
                    <div class="input-group-addon">
                        @Html.Partial("_Helper_CheckBox", "DateTo_Present", new ViewDataDictionary { { "value", Model.DateTo_Present == true }, { "text", "To Present" } })
                    </div>
                </div>
                
            </div>
        </div>

        <div class="form-row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.Organization)
            </div>
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.Organization, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.Address)
            </div>
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.Address, new { @class = "form-control", maxlength = "200" })
            </div>
        </div>

        <div class="form-row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.NoOfHours)
            </div>
            <div class="col-md-8">
                @Html.TextBoxFor(m => m.NoOfHours, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.PositionNatureOfWork)
            </div>
            <div class="col-md-8">
                @Html.TextAreaFor(m => m.PositionNatureOfWork, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.OnSeparatePage)
            </div>
            <div class="col-md-9">
                @Html.Partial("_Helper_CheckBox", "OnSeparatePage", new ViewDataDictionary { { "value", Model.OnSeparatePage } })
            </div>
        </div>
    }
}